# Generated by Django 5.2.7 on 2025-10-20 16:36

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spotify_id', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('total_tracks', models.IntegerField(default=0)),
                ('release_date', models.DateField(default=django.utils.timezone.now)),
                ('added_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('popularity', models.IntegerField(default=0)),
                ('album_cover', models.URLField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spotify_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200, verbose_name='Artist Name')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AlbumTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_number', models.IntegerField()),
                ('disc_number', models.IntegerField(default=0)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_filter.album')),
            ],
            options={
                'ordering': ['disc_number', 'track_number'],
            },
        ),
        migrations.AddField(
            model_name='album',
            name='artists',
            field=models.ManyToManyField(related_name='albums', to='spotify_filter.artist', verbose_name='Album Artists'),
        ),
        migrations.AddField(
            model_name='artist',
            name='genres',
            field=models.ManyToManyField(related_name='artists', to='spotify_filter.genre', verbose_name='Genres'),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spotify_id', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('duration_ms', models.IntegerField(default=0)),
                ('explicit', models.BooleanField(default=False)),
                ('albums', models.ManyToManyField(related_name='tracks', through='spotify_filter.AlbumTrack', to='spotify_filter.album')),
            ],
        ),
        migrations.AddField(
            model_name='albumtrack',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotify_filter.track'),
        ),
        migrations.AlterUniqueTogether(
            name='albumtrack',
            unique_together={('album', 'track')},
        ),
    ]
